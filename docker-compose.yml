services:
  monitor-agent:
    build: .
    image: nextcloud-monitor-agent:latest
    container_name: monitor-agent
    env_file:
      - .env
    environment:
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
    ports:
      - "8080:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus:v2.51.2
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - ./prometheus/recording_rules.yml:/etc/prometheus/recording_rules.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - monitor-net

  alertmanager:
    build:
      context: ./alertmanager
      dockerfile: Dockerfile
    image: nextcloud-alertmanager:latest
    container_name: alertmanager
    env_file:
      - .env
    environment:
      - SMTP_REQUIRE_TLS=true
    volumes:
      - alertmanager-data:/alertmanager
    ports:
      - "9093:9093"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - monitor-net

  webhook-logger:
    build:
      context: .
      dockerfile: deploy/webhook-logger/Dockerfile
    image: nextcloud-webhook-logger:latest
    container_name: webhook-logger
    ports:
      - "8081:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - monitor-net

  grafana:
    build:
      context: .
      dockerfile: deploy/grafana/Dockerfile
    image: nextcloud-grafana:latest
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3003:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - monitor-net

volumes:
  prometheus-data:
  grafana-data:
  alertmanager-data:

networks:
  monitor-net:
